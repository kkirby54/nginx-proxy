events {
  worker_connections 1024;
}

http {
  server_tokens off;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;
  
  # Docker 내장 DNS 설정
  resolver 127.0.0.11 valid=10s ipv6=off;

  server {
    listen 80 default_server;
    # server_name _;  # 도메인 확정 시 your.domain.com 으로 교체 권장
    client_max_body_size 100M;

    set $printing_pulse_backend "printing-pulse:8080";
    set $howmuch_reconcile_backend "howmuch-reconcile:8000";

    # Health
    location /health {
      access_log off;
      default_type text/plain;
      return 200 "healthy\n";
    }

    # printing-pulse API -> printing-pulse:8080
    location /api/ {
      proxy_pass http://$printing_pulse_backend/;   # ← 접두사 자동 제거, rewrite 불필요
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5s;
      proxy_read_timeout    60s;
      proxy_send_timeout    60s;
      proxy_redirect off;

      # 백엔드가 없을 때도 JSON로 깔끔 응답
      proxy_intercept_errors on;
      error_page 502 503 504 = @api_down;
    }
    location = /api { return 301 /api/; }

    # howmuch-reconcile Web -> howmuch-reconcile:8000
    location /web/ {
      proxy_pass http://$howmuch_reconcile_backend/;
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5s;
      proxy_read_timeout    60s;
      proxy_send_timeout    60s;
      proxy_redirect off;
      
      # 백엔드가 없을 때도 JSON로 깔끔 응답
      proxy_intercept_errors on;
      error_page 502 503 504 = @api_down;
    }
    location = /web { return 301 /web/; }

    # 다운 시 대체 응답
    location @api_down {
      default_type application/json;
      return 503 '{"error":"upstream_unavailable","upstream":"printing-pulse"}\n';
    }
    location @web_down {
      default_type application/json;
      return 503 '{"error":"upstream_unavailable","upstream":"howmuch-reconcile"}\n';
    }

    # Default 404 (JSON)
    location / {
      default_type application/json;
      add_header Cache-Control "no-store" always;
      return 404 '{"error":"Not Found"}\n';
    }
  }
}
